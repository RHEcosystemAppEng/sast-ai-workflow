name: "Unit Tests"

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'src/**'
      - 'tests/**'
      - 'requirements.txt'
      - 'dev-requirements.txt'
      - '.github/workflows/test.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'src/**'
      - 'tests/**'
      - 'requirements.txt'
      - 'dev-requirements.txt'
      - '.github/workflows/test.yml'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]
      fail-fast: false

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('requirements.txt', 'dev-requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        if [ -f dev-requirements.txt ]; then pip install -r dev-requirements.txt; fi

    - name: Lint with flake8
      run: |
        # Check for Python syntax errors or undefined names
        flake8 src/ --count --select=E9,F63,F7,F82 --show-source --statistics
        # Check for style issues (non-blocking)
        flake8 src/ --count --max-line-length=100 --extend-ignore=E203,W503 --statistics || true

    - name: Check code formatting with black
      run: |
        black --check --line-length=100 src/ || (echo "❌ Code formatting issues found. Run 'black --line-length=100 src/' to fix." && exit 1)

    - name: Check import sorting with isort
      run: |
        isort --check-only --profile black src/ || (echo "❌ Import sorting issues found. Run 'isort --profile black src/' to fix." && exit 1)

    - name: Run unit tests
      run: |
        cd tests
        python3 run_tests.py --verbose

    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results-python-${{ matrix.python-version }}
        path: |
          tests/test-reports/
          tests/*.log
        retention-days: 30

  test-coverage:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"

    - name: Install dependencies with coverage
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install coverage beautifulsoup4 lxml
        if [ -f dev-requirements.txt ]; then pip install -r dev-requirements.txt; fi

    - name: Run tests with coverage
      run: |
        cd tests && coverage run --source=../src ../tests/run_tests.py --verbose
        coverage report --show-missing
        coverage xml

    - name: Upload coverage reports
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: coverage.xml
        retention-days: 30

    - name: Comment coverage on PR
      if: github.event_name == 'pull_request'
      run: |
        echo "## 📊 Test Coverage Report" > coverage-comment.md
        echo "" >> coverage-comment.md
        echo "Coverage report for Python 3.11:" >> coverage-comment.md
        echo "" >> coverage-comment.md
        echo '```' >> coverage-comment.md
        coverage report >> coverage-comment.md
        echo '```' >> coverage-comment.md
        echo "" >> coverage-comment.md
        echo "📁 **Report Readers Test Coverage:**" >> coverage-comment.md
        echo "- Factory Pattern: ✅ Comprehensive" >> coverage-comment.md
        echo "- SARIF Reader: ✅ Full SARIF v2.1.0 spec" >> coverage-comment.md
        echo "- HTML Reader: ✅ Multi-encoding support" >> coverage-comment.md
        echo "- Google Sheets: ✅ API integration" >> coverage-comment.md
        echo "- Integration: ✅ End-to-end workflows" >> coverage-comment.md

  test-matrix-summary:
    runs-on: ubuntu-latest
    needs: test
    if: always()
    
    steps:
    - name: Check test matrix results
      run: |
        echo "## 🧪 Test Matrix Summary" 
        echo ""
        echo "| Python Version | Status |"
        echo "|---------------|--------|"
        if [ "${{ needs.test.result }}" == "success" ]; then
          echo "| 3.9 | ✅ Passed |"
          echo "| 3.10 | ✅ Passed |" 
          echo "| 3.11 | ✅ Passed |"
          echo "| 3.12 | ✅ Passed |"
          echo ""
          echo "🎉 **All tests passed across Python versions!**"
        else
          echo "| 3.9+ | ❌ Some failures |"
          echo ""
          echo "❌ **Some tests failed. Check individual job logs for details.**"
          exit 1
        fi 